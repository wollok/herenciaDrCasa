import personas.*
import enfermedad.*

describe "tests dr casa" {
var logan = new Persona(celulas = 3000000)
var frank= new Persona(celulas = 3500000)
var lucy = new Persona(celulas = 1000000)
var lupus = new EnfermedadAutoinmune(celulasAmenazadas = 10000)
var otitis = new EnfermedadInfecciosa(celulasAmenazadas = 100)
var malaria = new EnfermedadInfecciosa(celulasAmenazadas = 500)
var otraMalaria = new EnfermedadInfecciosa(celulasAmenazadas = 800)
var house = new Jefe(celulas = 2000)
var cameron = new Medico(celulas = 700000, dosis = 6000)
var foreman = new Medico(celulas = 700000, dosis = 100)


method initialize(){
	logan.contraer(malaria)
	logan.contraer(lupus)
	logan.contraer(otitis)
	frank.contraer(otraMalaria)
}

test "Logan, al pasar un dia, disminuye celulas" {
	logan.pasarUnDia()
	assert.equals(3000000-10000,logan.celulas())
}
test "Logan, al pasar un dia, sube levemente la temperatura" {
	logan.pasarUnDia()
	assert.equals(36+0.1+0.5,logan.temperatura())
}

test "House con un empleado con dosis alta, cura a logan" {
	house.contratar(cameron)
	house.atenderA(logan)
	assert.that(logan.estaCurada())
}

test "House con un empleado con dosis baja, no cura a logan" {
	house.contratar(foreman)
	house.atenderA(logan)
	assert.notThat(logan.estaCurada())
}

test "House sin empleados, al atender, da este error" {
	assert.throwsExceptionWithType(new SinEmpleadosException(),{house.atenderA(logan)})
}

test "La muerte le disminuye mortalmente la temperatura al paciente" {
	logan.contraer(muerte)
	logan.pasarUnDia()
	assert.equals(0,logan.temperatura())
}

test "Una varicela de muchas celulas es agresiva" {
	const varicela = new Varicela(celulasAmenazadas = 2000)
	lucy.contraer(varicela)
	assert.that(varicela.esAgresiva(lucy))
}
test "Una varicela de pocas celulas, pasando mas de un mes es agresiva" {
	const varicela = new Varicela(celulasAmenazadas = 1)
	lucy.contraer(varicela)
	31.times{x=>lucy.pasarUnDia()}
	assert.that(varicela.esAgresiva(lucy))
}
}
